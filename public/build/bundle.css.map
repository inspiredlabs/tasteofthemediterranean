{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../Thumbs.svelte"
  ],
  "sourcesContent": [
    "<script>\nexport let items, index, duration\nimport CtaBottom from './CtaBottom.svelte'\n//import PrevNextKeys from './PrevNextKeys.svelte'\n\n// Named functions are better, how is Slidy instance exposed up here?\n/* dragging and event propagation:\n    svelte.dev/repl/adf5a97b91164c239cc1e6d0c76c2abe?version=3.14.1\n*/\n\nfunction handleKeydown(event) {\n\tif (event.key === 'ArrowRight') {\n\t  index ++;\n\t} else if (event.key === 'ArrowLeft') {\n\t  index --;\n\t} else {\n\t\t//alert(`pressed the ${event.key} key`);\n\t\treturn;\n\t}\n}\n\n</script>\n\n<svelte:window on:keydown={handleKeydown}/>\n<!-- <PrevNextKeys/> -->\n\n<!--\ndraggable=true\non:click={ping}\non:dragenter={ping}\non:touchmove={ping}\n-->\n\n<!--\n<pre>\n  <ul>\n{#each items as thumb, i}\n<li>{thumb.component}</li>\n{/each}\n  </ul>\n</pre>\n-->\n\n<CtaBottom />\n<nav class=\"w-100 w-100-ns w-two-thirds-m w-two-thirds-l z-1 fr\nflex flex-nowrap flex-row justify-around\">\n  {#each items as thumb, i}\n    <button\n      class=\"\n      h4\n      pointer glow transition\n      o-70 bn bg-transparent backface-hidden\n      ph0 ph0-ns ph0-m ph3-l\n      f4 f4-ns f3-m f3-l tc mercury lemon ts1-dark-gray\"\n\t\t\tstyle=\"will-change:opacity;background-image: url({thumb.src}) no-repeat center center fixed;\"\n      class:active={i === index}\n      on:click={() => {\n        duration = 0,\n        index = i\n        setTimeout( () => { duration = 360 }, 80);\n      }}\n    >\n    {thumb.header}\n\t\t</button>\n\t{/each}\n</nav>\n\n<style>\n\nnav button.active {\n  color: white;\n  opacity: 1;\n  text-decoration:underline /* `mw-20` VS `justify-around`, this is the better trade off because of irregular `{thumb.header}` lengths */\n}\n</style>"
  ],
  "names": [],
  "mappings": "AAqEA,iBAAG,CAAC,MAAM,OAAO,cAAC,CAAC,AACjB,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,CAAC,CACV,gBAAgB,SAAS;AAC3B,CAAC"
}